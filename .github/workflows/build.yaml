name: Build

on:
  push:
    branches: [ 'develop', 'feature/**', '*fix/**', 'release/**' ]
  pull_request:
    branches: [ 'main' ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-latest, windows-latest]
        config: [Debug, Release]
        include:
          - os: ubuntu-24.04
            cxx: clang++-18
          - os: macos-latest
            cxx: g++-14

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v4

    - name: Install generator Ninja
      if: ${{matrix.os == 'ubuntu-24.04' || matrix.os == 'macos-latest'}}
      uses: seanmiddleditch/gha-setup-ninja@v5

    - name: Generate build system (Ubuntu/macOS)
      if: ${{matrix.os == 'ubuntu-24.04' || matrix.os == 'macos-latest'}}
      run: cmake -B ${{github.workspace}}/build
                 -G Ninja
                 -DCMAKE_CXX_COMPILER:STRING=${{matrix.cxx}}
                 -DCMAKE_BUILD_TYPE:STRING=${{matrix.config}}
                 -DBUILD_SHARED_LIBS:BOOL=OFF
                 -DBUILD_TESTING:BOOL=ON

    - name: Generate build system (Windows)
      if: ${{matrix.os == 'windows-latest'}}
      run: cmake -B ${{github.workspace}}/build
                 -DBUILD_SHARED_LIBS:BOOL=OFF
                 -DBUILD_TESTING:BOOL=ON

    - name: Build targets
      run: cmake --build ${{github.workspace}}/build
                 --config ${{matrix.config}}

    - name: Perform tests
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.config}} -V

    - name: Create package
      if: ${{false}}
      working-directory: ${{github.workspace}}/build
      run: cpack -C ${{matrix.config}} -G ZIP -V
